{"version":3,"file":"static/js/948.5a0e1c2c.chunk.js","mappings":"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","sources":["component/organisms/MetaTags/index.jsx","helper/regexPattern/index.js","pages/webPages/contactUs/index.jsx","../node_modules/@mui/icons-material/CancelRounded.js","../node_modules/@mui/icons-material/ScreenshotOutlined.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\nconst Metatags = ({\n    title = 'Pickzon - Connecting the World',\n    description = 'Looking for Fun, Masti & Shopping at one place? One of the most engaging and the best short video making app packed with never ending entertainment.',\n    image = 'https://d3t5gz5ttp8loj.cloudfront.net/common_images/pickzon_logo.png',\n    keywords = 'Make connections for better reach, Make social media connections, Meet professionals on social media, Connect with professionals on Pickzon, Better career opportunities on pickzon, Make connections on social media, Create engaging social media profile, Indian Social Media App, Social media app in India, Pickzon social media app, Social media apps,Social networking apps, Become a social media star on pickzon, Social media marketing, Social media optimization, Make money with social media, Share photos on social media, Social media for business, Social media for influencers, Social media app in worldwide, Social media feeds app, Increase social media engagement',\n    route = 'https://www.pickzon.com/'\n}) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n\n            <meta name=\"description\" content={description} />\n            <meta name=\"keywords\" content={keywords} />\n\n            <meta name=\"twitter:card\" content=\"summary\" />\n            <meta name=\"twitter:site\" content=\"@pickzon\" />\n            <meta name=\"twitter:title\" content={title} />\n            <meta name=\"twitter:description\" content={description} />\n            <meta name=\"twitter:keywords\" content={keywords} />\n            <meta name=\"twitter:image\" content={image} />\n\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            <meta property=\"og:keywords\" content={keywords} />\n            <meta property=\"og:image\" content={image} />\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n            <link rel=\"canonical\" href={route} />\n            <link rel=\"icon\" href=\"/favicon.ico\" />\n        </Helmet>\n    );\n}\nexport default Metatags;","const REGEX = {\n    IMAGES_EXT: /\\.(jpg|jpeg|png|gif|jfif|webp)$/,\n    VIDEO_EXT: /\\.(mp4)$/,\n    PDF_EXT: /\\.(pdf)$/,\n    LETTER_ONLY: /^[A-Za-z\\s]*$/,\n    // EMAIL: /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/,\n    EMAIL: /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi,\n    URL: /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi,\n    NO_SPACE: /^\\S.*[a-zA-Z\\s]*$/,\n    POSITIVE_INT: /^[0-9]+$|^$/,\n};\nexport default REGEX;","import React, { useEffect, useState } from \"react\";\nimport { Box, Button, Container, FormControl, Grid, IconButton, InputLabel, MenuItem, Paper, Select, TextField, Typography, useMediaQuery, useTheme, } from \"@mui/material\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { PUBLIC, WEB } from \"../../../routes/apiEndPoints\";\nimport { FORMDATA, GET } from \"../../../services\";\nimport { onShowSnackbar } from \"../../../redux/reducer/snackbar\";\nimport REGEX from \"../../../helper/regexPattern\";\nimport Metatags from \"../../../component/organisms/MetaTags\";\nimport ScreenshotOutlinedIcon from \"@mui/icons-material/ScreenshotOutlined\";\nimport CancelRoundedIcon from \"@mui/icons-material/CancelRounded\";\n\nconst defaultObj = {\n  name: \"\",\n  email: \"\",\n  mobile: \"\",\n  issue: \"\",\n  category: \"\",\n  files: {},\n  img: \"\",\n};\n\nconst ContactUs = () => {\n  let location = useLocation();\n  const theme = useTheme();\n  const isNonMobile = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const dispatch = useDispatch();\n  const [state, setState] = useState(defaultObj);\n  const [bgImg, setBgImg] = useState({ mediaArray: [] });\n  const [option, setOption] = useState([]);\n\n  const Style = {\n    wrapper: {\n      backgroundImage:\n        theme.palette.mode === \"dark\"\n          ? `linear-gradient(#00000080,#00000080), url(${bgImg.mediaArray[0]?.media})`\n          : `url(${bgImg.mediaArray[0]?.media})`,\n      backgroundSize: \"cover\",\n      paddingBottom: \"1rem\",\n      backgroundPosition: isNonMobile ? \"\" : \"center\",\n      backgroundRepeat: \"no-repeat\",\n    },\n\n    formWrapper: {\n      padding: isNonMobile ? \"2rem\" : \"2rem 1rem\",\n      background: \"#ffffff1f\",\n      borderRadius: \"1rem\",\n      boxShadow: \"0 4px 30px #0000001a\",\n      backdropFilter: \"blur(5.4px)\",\n      webkitbackdropFilter: \"blur(5.4px)\",\n      border: \"1px solid #ffffff54\",\n    },\n\n    uploadWrapper: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"20rem\",\n      border: `0.1rem solid ${theme.palette.mode === \"dark\" ? \"#ffffff3b\" : \"#0000003b\"\n        }`,\n      borderRadius: \"0.3rem\",\n      \"&:hover\": {\n        border: `0.1rem solid`,\n        borderColor: \"primary.100\",\n      },\n    },\n\n    uploadBox: {\n      border: `0.2rem dashed ${theme.palette.mode === \"dark\" ? \"#ffffff3b\" : \"#0000003b\"\n        }`,\n      borderRadius: \"0.5rem\",\n      textAlign: \"center\",\n      padding: \"3rem 7rem\",\n      \"&:hover\": {\n        cursor: \"pointer\",\n        borderStyle: \"dashed\",\n        border: \"0.2rem dashed\",\n        borderColor: \"primary.100\",\n      },\n    },\n    submitBtn: {\n      backgroundColor: \"secondary.main\",\n      textTransform: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"secondary.main\",\n    },\n  };\n\n  useEffect(() => {\n    const api_FetchWebMedia = async () => {\n      try {\n        let { status, message, payload } = await GET(\n          `${WEB.WEB_NAME}${location.pathname}`\n        );\n        if (status === 0) {\n          console.log(message);\n        }\n        setBgImg((prev) => ({\n          ...prev,\n          mediaArray: payload.mediaCdnUrl || [],\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    api_FetchWebMedia();\n    api_FetchCategory();\n  }, [location.pathname]);\n\n  const api_FetchCategory = async () => {\n    try {\n      let { status, message, payload } = await GET(\n        PUBLIC.CONTACTUS_CATEGORY,\n        {}\n      );\n      if (status === 0) {\n        console.log(message);\n      }\n      setOption(payload);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onHandleChange = (e) => {\n    try {\n      e.preventDefault();\n      const value = e.target.value;\n      const name = e.target.name;\n      if (name === \"mobile\") {\n        if (!value.match(REGEX.POSITIVE_INT)) {\n          dispatch(\n            onShowSnackbar({\n              message: \"Enter correct Phone no.\",\n              status: \"error\",\n              call: true,\n            })\n          );\n          return false;\n        }\n        if (value.length > 15) {\n          dispatch(\n            onShowSnackbar({\n              message: \"Enter upto 15 digits\",\n              status: \"error\",\n              call: true,\n            })\n          );\n          return false;\n        }\n      }\n      setState((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const validateEmail = (value) => {\n    try {\n      if (!value.match(REGEX.EMAIL)) {\n        dispatch(\n          onShowSnackbar({\n            message: \"Enter correct email address\",\n            status: \"error\",\n            call: true,\n          })\n        );\n        return false;\n      }\n      return true;\n    } catch (er) {\n      console.log(er);\n    }\n  };\n\n  const onHandleUploadImage = (event) => {\n    try {\n      event.preventDefault();\n      const { files } = event.target;\n      // let name = event.target.id\n      let mediaObj = {};\n      mediaObj.alt = files[0].name;\n      mediaObj.filePath = files[0];\n      mediaObj.image = URL.createObjectURL(files[0]);\n      let validateFormat = mediaObj.alt.match(REGEX.IMAGES_EXT);\n      if (!validateFormat) {\n        return dispatch(\n          onShowSnackbar({\n            message: \"Image Format Unsupported\",\n            status: \"error\",\n            call: true,\n          })\n        );\n      } else {\n        setState((pre) => ({\n          ...pre,\n          files: mediaObj.filePath,\n          img: mediaObj.image,\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onHandleRemove = () => {\n    setState((pre) => ({\n      ...pre,\n      files: {},\n      img: \"\",\n    }));\n  };\n\n  const onHandleFormSubmit = async (e) => {\n    e.preventDefault();\n    if (!state.name || !state.email || !state.mobile || !state.issue || !state.category) {\n      return dispatch(\n        onShowSnackbar({\n          message: \"Please fill mandatory fields\",\n          status: \"error\",\n          call: true,\n        })\n      );\n    } else if (!validateEmail(state.email)) {\n      return;\n    } else {\n      delete state.img;\n      let { status, message } = await FORMDATA(PUBLIC.SUBMIT_CONTACTUS, state);\n      if (status === 0) {\n        return dispatch(\n          onShowSnackbar({ message: message, status: \"error\", call: true })\n        );\n      }\n      setState(defaultObj);\n      return dispatch(\n        onShowSnackbar({ message: message, status: \"success\", call: true })\n      );\n    }\n  };\n\n  return (\n    <>\n      <Metatags />\n      <Container maxWidth=\"false\" sx={Style.wrapper}>\n        <Container>\n          <Box p={\"2rem 0\"}>\n            <Grid\n              container\n              component={\"form\"}\n              sx={Style.formWrapper}\n              onSubmit={onHandleFormSubmit}\n            >\n              <Box mb={5}>\n                <Typography\n                  variant={isNonMobile ? \"h1\" : \"h2\"}\n                  textAlign={\"center\"}\n                >\n                  Contact us\n                </Typography>\n                <Typography\n                  variant=\"h5\"\n                  textAlign={isNonMobile ? \"center\" : \"justify\"}\n                >\n                  You can always count on us for assistance. If you have\n                  questions or concerns, please don't hesitate to reach out to\n                  us. Just fill out the form below and our team will get back to\n                  you shortly.\n                </Typography>\n              </Box>\n              <Grid container spacing={2} columns={16} rowSpacing={2}>\n                <Grid item xs={16} sm={16} md={16} lg={8} xl={8}>\n                  <TextField\n                    name=\"name\"\n                    fullWidth\n                    label=\"Name\"\n                    variant=\"outlined\"\n                    required\n                    value={state.name}\n                    onChange={onHandleChange}\n                  />\n                </Grid>\n                <Grid item xs={16} sm={16} md={16} lg={8} xl={8}>\n                  <TextField\n                    name=\"email\"\n                    fullWidth\n                    label=\"E-mail\"\n                    variant=\"outlined\"\n                    required\n                    value={state.email}\n                    onChange={onHandleChange}\n                  />\n                </Grid>\n                <Grid item xs={16} sm={16} md={16} lg={8} xl={8}>\n                  <TextField\n                    name=\"mobile\"\n                    fullWidth\n                    label=\"Phone no.\"\n                    variant=\"outlined\"\n                    required\n                    value={state.mobile}\n                    onChange={onHandleChange}\n                  />\n                </Grid>\n                <Grid item xs={16} sm={16} md={16} lg={8} xl={8}>\n                  <Box>\n                    <FormControl fullWidth>\n                      <InputLabel id=\"demo-simple-select-label\" required>\n                        Subject\n                      </InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        name=\"category\"\n                        value={state.category}\n                        label=\"Subject\"\n                        onChange={(e, data) => onHandleChange(e, data)}\n                      >\n                        {option.map((item, i) => {\n                          return (\n                            <MenuItem key={i} value={item.value}>\n                              {item.value}\n                            </MenuItem>\n                          );\n                        })}\n                      </Select>\n                    </FormControl>\n                  </Box>\n                </Grid>\n\n                <Grid item xs={16}>\n                  <TextField\n                    name=\"issue\"\n                    fullWidth\n                    label=\"Your Issue/Query\"\n                    multiline\n                    rows={4}\n                    required\n                    value={state.issue}\n                    onChange={onHandleChange}\n                  />\n                </Grid>\n\n                <Grid item xs={16}>\n                  <Box sx={Style.uploadWrapper}>\n                    {state.img ? (\n                      <Paper elevation={3}>\n                        <Box m={1} position={\"relative\"}>\n                          <IconButton\n                            onClick={onHandleRemove}\n                            sx={{\n                              color: \"#c2c2c2\",\n                              position: \"absolute\",\n                              right: \"0\",\n                            }}\n                          >\n                            <CancelRoundedIcon />\n                          </IconButton>\n                          <img\n                            src={state.img}\n                            alt={state.files.name}\n                            loading=\"lazy\"\n                            style={{\n                              width: \"auto\",\n                              height: \"15rem\",\n                              overflow: \"hidden\",\n                            }}\n                          />\n                        </Box>\n                      </Paper>\n                    ) : (\n                      <>\n                        <Box\n                          title={\"Click to upload file\"}\n                          sx={\n                            isNonMobile\n                              ? Style.uploadBox\n                              : { textAlign: \"center\", cursor: \"pointer\" }\n                          }\n                          onClick={() => {\n                            document.getElementById(\"UploadImage\").click();\n                          }}\n                        >\n                          <Box>\n                            <ScreenshotOutlinedIcon\n                              sx={{\n                                fontSize: \"5rem\",\n                                color:\n                                  theme.palette.mode === \"dark\"\n                                    ? \"#fff\"\n                                    : \"#525252\",\n                              }}\n                            />\n                          </Box>\n                          <Typography\n                            variant=\"h5\"\n                            sx={{\n                              textTransform: \"none\",\n                              color:\n                                theme.palette.mode === \"dark\"\n                                  ? \"#fff\"\n                                  : \"#525252\",\n                            }}\n                          >\n                            Add Screenshot\n                          </Typography>\n                        </Box>\n                        <input\n                          style={{ display: \"none\" }}\n                          id=\"UploadImage\"\n                          type=\"file\"\n                          accept=\"image/jpg,image/png,image/jpeg,image/jfif\"\n                          onChange={onHandleUploadImage}\n                        />\n                      </>\n                    )}\n                  </Box>\n                </Grid>\n                <Grid item xs={16} textAlign={\"right\"}>\n                  <Box>\n                    <Button\n                      variant=\"contained\"\n                      sx={Style.submitBtn}\n                      type=\"submit\"\n                    >\n                      Submit\n                    </Button>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Box>\n        </Container>\n      </Container>\n    </>\n  );\n};\n\nexport default ContactUs;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm4.3 14.3c-.39.39-1.02.39-1.41 0L12 13.41 9.11 16.3c-.39.39-1.02.39-1.41 0a.9959.9959 0 0 1 0-1.41L10.59 12 7.7 9.11a.9959.9959 0 0 1 0-1.41c.39-.39 1.02-.39 1.41 0L12 10.59l2.89-2.89c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41L13.41 12l2.89 2.89c.38.38.38 1.02 0 1.41z\"\n}), 'CancelRounded');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 1.01 7 1c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 21H7v-1h10v1zm0-3H7V6h10v12zm0-14H7V3h10v1zM9.5 8.5H12V7H8v4h1.5V8.5zM12 17h4v-4h-1.5v2.5H12V17z\"\n}), 'ScreenshotOutlined');\n\nexports.default = _default;"],"names":["_ref","_ref$title","title","_ref$description","description","_ref$image","image","_ref$keywords","keywords","_ref$route","route","_jsxs","Helmet","children","_jsx","name","content","property","rel","href","IMAGES_EXT","VIDEO_EXT","PDF_EXT","LETTER_ONLY","EMAIL","URL","NO_SPACE","POSITIVE_INT","defaultObj","email","mobile","issue","category","files","img","_bgImg$mediaArray$","_bgImg$mediaArray$2","location","useLocation","theme","useTheme","isNonMobile","useMediaQuery","breakpoints","up","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","state","setState","_useState3","mediaArray","_useState4","bgImg","setBgImg","_useState5","_useState6","option","setOption","Style","wrapper","backgroundImage","palette","mode","concat","media","backgroundSize","paddingBottom","backgroundPosition","backgroundRepeat","formWrapper","padding","background","borderRadius","boxShadow","backdropFilter","webkitbackdropFilter","border","uploadWrapper","display","justifyContent","alignItems","height","borderColor","uploadBox","textAlign","cursor","borderStyle","submitBtn","backgroundColor","textTransform","useEffect","api_FetchWebMedia","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$GET","status","message","payload","wrap","_context","prev","next","GET","WEB","pathname","sent","console","log","_objectSpread","mediaCdnUrl","t0","error","stop","apply","arguments","api_FetchCategory","_ref2","_callee2","_yield$GET2","_context2","PUBLIC","onHandleChange","e","preventDefault","value","target","match","REGEX","onShowSnackbar","call","length","prevState","_defineProperty","validateEmail","er","onHandleFormSubmit","_ref3","_callee3","_yield$FORMDATA","_context3","abrupt","FORMDATA","_x","_Fragment","Metatags","Container","maxWidth","sx","Box","p","Grid","container","component","onSubmit","mb","Typography","variant","spacing","columns","rowSpacing","item","xs","sm","md","lg","xl","TextField","fullWidth","label","required","onChange","FormControl","InputLabel","id","Select","labelId","data","map","i","MenuItem","multiline","rows","Paper","elevation","m","position","IconButton","onClick","pre","color","right","CancelRoundedIcon","src","alt","loading","style","width","overflow","document","getElementById","click","ScreenshotOutlinedIcon","fontSize","type","accept","event","mediaObj","filePath","createObjectURL","Button","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}