{"version":3,"sources":["components/pages/staticPages/appView/appReferEarn/AppReferAndEarn.jsx"],"names":["AppReferAndEarn","path","useLocation","pathname","split","useState","state","setState","loader","setLoader","useEffect","fetchCmsData","a","GET","CMS","APP_REFER","status","message","payload","console","log","error","seo","title","rel","href","window","location","name","content","description","keywords","className","basic","textAlign","style","margin","width","fluid","src","Assets","defaultPlaceholders","landscape","img","alt","bannerImage","Array","fill","Line","length","map","item","image","dangerouslySetInnerHTML","__html","fontSize","React","memo"],"mappings":"+QASMA,EAAkB,WAAO,IAAD,kBAExBC,EADaC,cACGC,SAASC,MAAM,KAAK,GACxC,EAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAA4BF,mBAAS,GAAE,mBAAhCG,EAAM,KAAEC,EAAS,KAExBC,qBAAU,WAENC,MAGD,IAEH,IAAMA,EAAY,uCAAG,kCAAAC,EAAA,sDAEJ,OAFI,SAEjBH,EAAU,GAAG,SAC4BI,YAAI,GAAD,OAAIC,MAAIC,WAAS,OAAGd,IAAQ,KAAD,WAAjEe,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAO,EAAPA,QACR,IAAXF,GACFG,QAAQC,IAAIH,GAEdR,EAAUO,GACVT,EAASW,GAAS,kDAElBC,QAAQE,MAAM,EAAD,IAAQ,0DAExB,kBAZiB,mCAclB,OACE,qCACE,eAAC,IAAM,WACL,gCAAiB,QAAjB,EAAQf,EAAMgB,WAAG,aAAT,EAAWC,QACnB,sBAAMC,IAAI,YAAYC,KAAMC,OAAOC,SAASF,OAC5C,sBAAMG,KAAK,cAAcC,QAAkB,QAAX,EAAEvB,EAAMgB,WAAG,aAAT,EAAWQ,cAC7C,sBAAMF,KAAK,WAAWC,QAAkB,QAAX,EAAEvB,EAAMgB,WAAG,aAAT,EAAWS,cAG5C,yBAASC,UAAU,aAAY,SAC7B,qBAAKA,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAEL,IAAXxB,EACE,eAAC,IAAO,CAACyB,OAAK,EAACC,UAAU,SAASC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,QAAS,UACtE,cAAC,IAAW,CAACC,OAAK,WAChB,qBAAKC,IAAKC,IAAOC,oBAAoBC,UAAUC,IAAKR,MAAO,CAAEE,MAAO,QAAUO,IAA4B,QAAzB,EAAO,OAALtC,QAAK,IAALA,GAAkB,QAAb,EAALA,EAAOuC,mBAAW,WAAb,EAAL,EAAoBD,WAAG,QAAI,oDAE/GE,MAAM,GAAGC,KACR,eAAC,IAAW,CAACT,OAAK,YAChB,cAAC,IAAYU,KAAI,CAACC,OAAO,SACzB,cAAC,IAAYD,KAAI,IACjB,cAAC,IAAYA,KAAI,CAACC,OAAO,SACzB,cAAC,IAAYD,KAAI,QAEnBE,KAAI,SAACC,GACL,OAAOA,QAIX,qCACE,qBAAKZ,IAA8B,QAA3B,EAAO,OAALjC,QAAK,IAALA,GAAkB,QAAb,EAALA,EAAOuC,mBAAW,WAAb,EAAL,EAAoBO,aAAK,QAAIZ,IAAOC,oBAAoBC,UAAUC,IAAKR,MAAO,CAAEE,MAAO,QAAUO,IAA4B,QAAzB,EAAO,OAALtC,QAAK,IAALA,GAAkB,QAAb,EAALA,EAAOuC,mBAAW,WAAb,EAAL,EAAoBD,WAAG,QAAI,kDAC3I,qBAAKZ,UAAU,cAAa,SAAC,oBAAIA,UAAU,cAAa,SAAE1B,EAAMsB,SAChE,qBAAKI,UAAU,YAAW,SACxB,qBAAKA,UAAU,QAAQqB,wBAAyB,CAAEC,OAAQhD,EAAMwB,aAAeK,MAAO,CAAEoB,SAAU,yBAUvGC,cAAMC,KAAKzD","file":"static/js/34.183fef5a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\nimport { Placeholder, Segment } from 'semantic-ui-react';\nimport Assets from '../../../../../assets/Assets';\nimport { CMS } from '../../../../../route/apiPath';\nimport { GET } from \"../../../../../Services\";\nimport \"../../../staticPages/exploreMore/style.css\"\n\nconst AppReferAndEarn = () => {\n  const location = useLocation()\n  let path = location.pathname.split(\"/\")[1]\n  const [state, setState] = useState({})\n  const [loader, setLoader] = useState(0)\n\n  useEffect(() => {\n    function callEff() {\n      fetchCmsData();\n    }\n    callEff();\n  }, []);\n\n  const fetchCmsData = async () => {\n    try {\n      setLoader(0);\n      let { status, message, payload } = await GET(`${CMS.APP_REFER}${path}`);\n      if (status === 0) {\n        console.log(message);\n      }\n      setLoader(status);\n      setState(payload);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{state.seo?.title}</title>\n        <link rel=\"canonical\" href={window.location.href} />\n        <meta name=\"description\" content={state.seo?.description} />\n        <meta name=\"keywords\" content={state.seo?.keywords} />\n      </Helmet>\n\n      <section className=\"mobile-top\">\n        <div className=\"container\">\n          <div className=\"row\">\n            {\n              loader === 0 ?\n                <Segment basic textAlign='center' style={{ margin: \"0\", width: \"100%\" }}>\n                  <Placeholder fluid>\n                    <img src={Assets.defaultPlaceholders.landscape.img} style={{ width: \"100%\" }} alt={state?.bannerImage?.alt ?? \"Make Endless Contacts on Social Media! banner\"} />\n                  </Placeholder>\n                  {Array(5).fill(\n                    <Placeholder fluid>\n                      <Placeholder.Line length='full' />\n                      <Placeholder.Line />\n                      <Placeholder.Line length='full' />\n                      <Placeholder.Line />\n                    </Placeholder>\n                  ).map((item) => {\n                    return item\n                  })}\n                </Segment>\n                :\n                <>\n                  <img src={state?.bannerImage?.image ?? Assets.defaultPlaceholders.landscape.img} style={{ width: \"100%\" }} alt={state?.bannerImage?.alt ?? \"Make Endless Contacts on Social Media! banner\"} />\n                  <div className=\"refer-outer\"><h1 className=\"refer_title\">{state.name}</h1></div>\n                  <div className=\"inner-row\">\n                    <div className=\"mt-15\" dangerouslySetInnerHTML={{ __html: state.description }} style={{ fontSize: \"20px\" }} />\n                  </div>\n                </>\n            }\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\nexport default React.memo(AppReferAndEarn);\n"],"sourceRoot":""}