{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Container/Container.js","components/pages/staticPages/appView/appTerms/AppTerms.jsx"],"names":["Container","props","children","className","content","fluid","text","textAlign","classes","cx","useKeyOnly","useTextAlignProp","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","AppTerms","_state$seo","_state$seo2","_state$seo3","path","useLocation","pathname","split","_useState","useState","_useState2","_slicedToArray","state","setState","_useState3","_useState4","loader","setLoader","useEffect","fetchCmsData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$GET","status","message","payload","wrap","_context","prev","next","GET","concat","CMS","APP_TERMS","sent","console","log","t0","error","stop","apply","arguments","_jsxs","_Fragment","Helmet","_jsx","seo","title","rel","href","window","location","name","description","keywords","Placeholder","style","margin","Line","Array","fill","length","map","item","dangerouslySetInnerHTML","__html","fontSize","memo"],"mappings":"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","file":"static/js/29.e04b9481.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","import React, { useState, useEffect } from 'react'\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\nimport { Container, Placeholder } from 'semantic-ui-react';\nimport { CMS } from '../../../../../route/apiPath';\nimport { GET } from \"../../../../../Services\";\nimport \"../../../staticPages/exploreMore/style.css\"\n\nconst AppTerms = () => {\n  const location = useLocation()\n  let path = location.pathname.split(\"/\")[1]\n  const [state, setState] = useState({})\n  const [loader, setLoader] = useState(0)\n\n  useEffect(() => {\n    function callEff() {\n      fetchCmsData();\n    }\n    callEff();\n  }, []);\n\n  const fetchCmsData = async () => {\n    try {\n      setLoader(0);\n      let { status, message, payload } = await GET(`${CMS.APP_TERMS}${path}`);\n      if (status === 0) {\n        console.log(message);\n      }\n      setLoader(status);\n      setState(payload);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{state.seo?.title}</title>\n        <link rel=\"canonical\" href={window.location.href} />\n        <meta name=\"description\" content={state.seo?.description} />\n        <meta name=\"keywords\" content={state.seo?.keywords} />\n      </Helmet>\n      {\n        loader === 0 ?\n          <Container>\n            <Placeholder style={{ margin: \"2rem auto\" }} >\n              <Placeholder.Line />\n            </Placeholder>\n            {Array(6).fill(\n              <Placeholder fluid>\n                <Placeholder.Line />\n                <Placeholder.Line />\n                <Placeholder.Line length='full' />\n                <Placeholder.Line />\n              </Placeholder>\n            ).map((item) => {\n              return item\n            })}\n          </Container>\n          :\n          <section className=\"mobile-top\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"refer-outer\"><h1 className=\"refer_title\">{state.name}</h1></div>\n                <div className=\"inner-row\">\n                  <div className=\"mt-15\" dangerouslySetInnerHTML={{ __html: state.description }} style={{ fontSize: \"20px\" }} />\n                </div>\n              </div>\n            </div>\n          </section>\n      }\n    </>\n  );\n}\nexport default React.memo(AppTerms);\n"],"sourceRoot":""}