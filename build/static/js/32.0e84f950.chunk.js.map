{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Container/Container.js","components/pages/staticPages/pickzon/Terms.jsx"],"names":["Container","props","children","className","content","fluid","text","textAlign","classes","cx","useKeyOnly","useTextAlignProp","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","Terms","path","useLocation","pathname","split","useState","state","setState","loader","setLoader","useEffect","fetchCmsData","a","GET","CMS","APP_PRIVACY","status","message","payload","console","log","error","seo","title","rel","href","window","location","name","description","keywords","style","margin","Line","Array","fill","length","map","item","dangerouslySetInnerHTML","__html","fontSize"],"mappings":"mHAAA,wEASA,SAASA,EAAUC,GACjB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAQJ,EAAMI,MACdC,EAAOL,EAAMK,KACbC,EAAYN,EAAMM,UAClBC,EAAUC,YAAG,KAAMC,YAAWJ,EAAM,QAASI,YAAWL,EAAO,SAAUM,YAAiBJ,GAAY,YAAaJ,GACnHS,EAAOC,YAAkBb,EAAWC,GACpCa,EAAcC,YAAef,EAAWC,GAC5C,OAAoBe,IAAMC,cAAcH,EAAaI,YAAS,GAAIN,EAAM,CACtET,UAAWK,IACTW,IAAcC,MAAMlB,GAAYE,EAAUF,GAGhDF,EAAUqB,aAAe,CAAC,KAAM,WAAY,YAAa,UAAW,QAAS,OAAQ,aACrFrB,EAAUsB,UAqBN,GACWtB,O,4KC6BAuB,UApED,WAAO,IAAD,MAEdC,EADaC,cACGC,SAASC,MAAM,KAAK,GACxC,EAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAA4BF,mBAAS,GAAE,mBAAhCG,EAAM,KAAEC,EAAS,KAExBC,qBAAU,WAENC,MAGD,IACH,IAAMA,EAAY,uCAAG,kCAAAC,EAAA,sDAEJ,OAFI,SAEjBH,EAAU,GAAG,SAC4BI,YAAI,GAAD,OAAIC,MAAIC,aAAW,OAAGd,IAAQ,KAAD,WAAnEe,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAO,EAAPA,QACR,IAAXF,GACFG,QAAQC,IAAIH,GAEdR,EAAUO,GACVT,EAASW,GAAS,kDAElBC,QAAQE,MAAM,EAAD,IAAQ,0DAExB,kBAZiB,mCAclB,OACE,qCACE,eAAC,IAAM,WACL,gCAAiB,QAAjB,EAAQf,EAAMgB,WAAG,aAAT,EAAWC,QACnB,sBAAMC,IAAI,YAAYC,KAAMC,OAAOC,SAASF,OAC5C,sBAAMG,KAAK,cAAc/C,QAAkB,QAAX,EAAEyB,EAAMgB,WAAG,aAAT,EAAWO,cAC7C,sBAAMD,KAAK,WAAW/C,QAAkB,QAAX,EAAEyB,EAAMgB,WAAG,aAAT,EAAWQ,cAI/B,IAAXtB,EACE,eAAC,IAAS,WACR,cAAC,IAAW,CAACuB,MAAO,CAAEC,OAAQ,cAAe,SAC3C,cAAC,IAAYC,KAAI,MAElBC,MAAM,GAAGC,KACR,eAAC,IAAW,CAACrD,OAAK,YAChB,cAAC,IAAYmD,KAAI,IACjB,cAAC,IAAYA,KAAI,IACjB,cAAC,IAAYA,KAAI,CAACG,OAAO,SACzB,cAAC,IAAYH,KAAI,QAEnBI,KAAI,SAACC,GACL,OAAOA,QAIX,yBAAS1D,UAAU,cAAa,SAC9B,cAAC,IAAS,UACR,sBAAKA,UAAU,MAAK,UAClB,qBAAKA,UAAU,cAAcmD,MAAO,CAAEC,OAAQ,cAAe,SAAC,oBAAIpD,UAAU,cAAa,SAAE0B,EAAMsB,SACjG,qBAAKhD,UAAU,YAAW,SACxB,qBAAKA,UAAU,QAAQ2D,wBAAyB,CAAEC,OAAQlC,EAAMuB,aAAeE,MAAO,CAAEU,SAAU","file":"static/js/32.0e84f950.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","import React, { useState, useEffect } from 'react'\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\nimport { Container, Placeholder } from 'semantic-ui-react';\nimport { CMS } from '../../../../route/apiPath';\nimport { GET } from \"../../../../Services\";\nimport '../static.css'\n\nconst Terms = () => {\n  const location = useLocation()\n  let path = location.pathname.split(\"/\")[1]\n  const [state, setState] = useState({})\n  const [loader, setLoader] = useState(0)\n\n  useEffect(() => {\n    function callEff() {\n      fetchCmsData();\n    }\n    callEff();\n  }, []);\n  const fetchCmsData = async () => {\n    try {\n      setLoader(0);\n      let { status, message, payload } = await GET(`${CMS.APP_PRIVACY}${path}`);\n      if (status === 0) {\n        console.log(message);\n      }\n      setLoader(status);\n      setState(payload);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{state.seo?.title}</title>\n        <link rel=\"canonical\" href={window.location.href} />\n        <meta name=\"description\" content={state.seo?.description} />\n        <meta name=\"keywords\" content={state.seo?.keywords} />\n      </Helmet>\n\n      {\n        loader === 0 ?\n          <Container>\n            <Placeholder style={{ margin: \"1rem 0 0 0\" }} >\n              <Placeholder.Line />\n            </Placeholder>\n            {Array(6).fill(\n              <Placeholder fluid>\n                <Placeholder.Line />\n                <Placeholder.Line />\n                <Placeholder.Line length='full' />\n                <Placeholder.Line />\n              </Placeholder>\n            ).map((item) => {\n              return item\n            })}\n          </Container>\n          :\n          <section className=\"desktop-top\">\n            <Container>\n              <div className=\"row\">\n                <div className=\"refer-outer\" style={{ margin: \"1rem 0 0 0\" }}><h1 className=\"refer_title\">{state.name}</h1></div>\n                <div className=\"inner-row\">\n                  <div className=\"mt-15\" dangerouslySetInnerHTML={{ __html: state.description }} style={{ fontSize: \"20px\" }} />\n                </div>\n              </div>\n            </Container>\n          </section>\n      }\n    </>\n  );\n};\n\nexport default Terms;"],"sourceRoot":""}